con
con <- CreateConnection("SDY269")
con$quick_plot("hai")
dt
colnames(dt)
con$quick_plot("elisa")
con$quick_plot("elisa_mbaa")
emba <- con$getDataset("elisa_mbaa")
emba
con <- CreateConnection("SDY269")
library(ImmuneSpaceR)
con <- CreateConnection("SDY269")
con$quick_plot("elisa_mbaa")
con
dt
dt
dataset <- "hai"
quick_plot = function(dataset, normalize_to_baseline = TRUE, type = "auto", ...){
dt <- getDataset(dataset)
if(length(grep("analyte",colnames(dt)))==0){
dt <- dt[,analyte:=""]
}
dt <- getDataset(dataset)
if(length(grep("analyte",colnames(dt)))==0){
dt <- dt[,analyte:=""]
}
dt <- con$getDataset(dataset)
if(length(grep("analyte",colnames(dt)))==0){
dt <- dt[,analyte:=""]
}
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
dt
dt_unique
dataset <- "elisa_mbaa"
dt <- con$getDataset(dataset)
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(as.factor(study_time_collected), response,
data = dt_unique, facets=~name,
geom = c("raster"), ..., xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(as.factor(study_time_collected), response,
data = dt_unique, facets=~name,
geom = c("raster"), xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
print(p)
dt_unique
p
qplot(as.factor(study_time_collected), response)
qplot(as.factor(study_time_collected), response, data = dt_unique
)
qplot(as.factor(study_time_collected), response, data = dt_unique, geom = "raster")
qplot(as.factor(study_time_collected), analyte, data = dt_unique, geom = "raster")
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name,
geom = c("raster"), ..., xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name,
geom = c("raster"), xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
print(p)
dataset <- "elispot"
dt <- dt[,value_reported:=spot_number_reported/cell_number_reported]
dt <- con$getDataset(dataset)
dt <- dt[,value_reported:=spot_number_reported/cell_number_reported]
dt
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
dt <- dt[,value_reported:=spot_number_reported/cell_number_reported]
#dt <- dt[,value_reported:=spot_number_reported/cell_number_reported]
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
dt_unique
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name,
geom = c("raster"), ..., xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name,
geom = c("raster"), xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
print(p)
dt
dt <- con$getDataset(dataset)
dt <- dt[,value_reported:=spot_number_reported/cell_number_reported]
dt
dataset
dt <- con$getDataset(dataset, reload = TRUE)
dt
dt <- dt[,value_reported:=spot_number_reported/cell_number_reported]
dt
log2(0)
log2(1)
log2(2)
log2(3)
log2(4)
dt <- con$getDataset(dataset, reload = TRUE)
dt <- dt[,value_reported:=spot_number_reported/cell_number_reported]
dt[, response := list(mean(value_reported, na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name,
geom = c("raster"), ..., xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
dt <- dt[,value_reported:=spot_number_reported/cell_number_reported]
dt[, response := list(mean(value_reported, na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name,
geom = c("raster"), xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
p
dataset <- "pcr"
dt <- con$getDataset(dataset)
dt
if(length(grep("analyte",colnames(dt)))==0){
dt <- dt[,analyte:=""]
}
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
warnings
warnings()
dt
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name,
geom = c("raster"), xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
p
p <- qplot(as.factor(study_time_collected), response,
data = dt_unique, facets=~name,
geom = c("line", "point"),xlab = "time", group = subject_accession)
p
unique(dt$entrez_gene_id)
p <- qplot(as.factor(study_time_collected), response,
data = dt_unique, facets=~name+entrez_gene_id,
geom = c("raster"), xlab = "time", group = subject_accession)
p
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response, entrez_gene_id)])
p <- qplot(as.factor(study_time_collected), response,
data = dt_unique, facets=~name+entrez_gene_id,
geom = c("raster"), ..., xlab = "time", group = subject_accession)
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response, entrez_gene_id)])
p <- qplot(as.factor(study_time_collected), response,
data = dt_unique, facets=~name+entrez_gene_id,
geom = c("raster"), xlab = "time", group = subject_accession)
p
dataset <- "elispot"
dt <- con$getDataset(dataset)
if(length(grep("analyte",colnames(dt)))==0){
dt <- dt[,analyte:=""]
}
dt <- dt[,value_reported:=spot_number_reported/cell_number_reported]
dt[, response := list(mean(log2(value_reported+1), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name,
geom = c("raster"),xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
p
max(dt_unique$response)
dt_unique[ response == max(dt_unique$response)]
dt_unique
dataset <- "elisa_mbaa"
if(length(grep("analyte",colnames(dt)))==0){
dt <- dt[,analyte:=""]
}
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name,
geom = c("raster"),xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
p
dt
dataset <- "elisa_mbaa"
dt <- con$getDataset(dataset)
if(length(grep("analyte",colnames(dt)))==0){
dt <- dt[,analyte:=""]
}
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name,
geom = c("raster"), xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
p
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(as.factor(study_time_collected), analyte,
data = dt_unique, facets=~name+study_time_collected,
geom = c("raster"), xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
p
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(subject_accesssion, analyte,
data = dt_unique, facets=~name+study_time_collected,
geom = c("raster"), xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
p
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(subject_accession, analyte,
data = dt_unique, facets=~name+study_time_collected,
geom = c("raster"), xlab = "time", fill = response) +
scale_fill_gradient2(high = "#a50026", mid="#ffffbf", low="#313695")
p
dataset <- "hai"
con <- con$getDataset(dataset)
dt <- con$getDataset(dataset)
con <- CreateConnection("SDY269")
dt <- con$getDataset(dataset)
if(length(grep("analyte",colnames(dt)))==0){
dt <- dt[,analyte:=""]
}
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
p <- qplot(as.factor(study_time_collected), response,
data = dt_unique, facets=~name,
geom=c("boxplot","jitter"), xlab = "time",
ylab="response (log2)")
p
dt <- con$getDataset(dataset)
if(length(grep("analyte",colnames(dt)))==0){
dt <- dt[,analyte:=""]
}
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
normalize_to_baseline
normalize_to_baseline <- T
if(normalize_to_baseline){
dt_unique <- dt_unique[, response := response -response[study_time_collected==0],
by="name,subject_accession,analyte"][study_time_collected!=0]
ylab <- "Response normalized to baseline"
} else{
ylab <- "Response (log2)"
}
ylab
p <- qplot(as.factor(study_time_collected), response, data = dt_unique,
facets = analyte~name, geom = c("boxplot", "jitter"),
xlab = "time", ylab = ylab)
p
p
dataset <- "elisa_mbaa"
dt <- con$getDataset(dataset)
if(length(grep("analyte",colnames(dt)))==0){
dt <- dt[,analyte:=""]
}
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
dt_unique
p <- qplot(as.factor(study_time_collected), response, data = dt_unique,
facets = analyte~name, geom = c("boxplot", "jitter"),
xlab = "time", ylab = ylab)
p
?quick_plot
?ggplot2::quick_plot
library(ggplot2)
?quickplot
p <- qplot(as.factor(study_time_collected), response, data = dt_unique,
facets = analyte~name, geom = c("boxplot", "jitter"),
xlab = "time", ylab = ylab, color = analyte)
p
p <- qplot(as.factor(study_time_collected), response, data = dt_unique,
facets = analyte~name, geom = c("boxplot", "jitter"),
xlab = "time", ylab = ylab, color = study_time_collected)
p
p <- qplot(as.factor(study_time_collected), response, data = dt_unique,
facets = analyte~name, geom = c("boxplot", "jitter"),
xlab = "time", ylab = ylab, color = as.factor(study_time_collected))
p
dt_unique[, study_time_collected := as.factor(study_time_collected)]
p <- qplot(study_time_collected, response, data = dt_unique,
facets = analyte~name, geom = c("boxplot", "jitter"),
xlab = "time", ylab = ylab, color = study_time_collected)
p
source('~/workspace/git/ImmuneSpaceR/R/ImmuneSpace.R')
sessionInfo()
library(Rlabkey)
source('~/workspace/git/ImmuneSpaceR/R/ImmuneSpace.R')
ls()
con <- CreateConnection("SDY269")
library(gtoold)
library(gtools)
con <- CreateConnection("SDY269")
library(data.table)
library(ggplot2)
con <- CreateConnection("SDY269")
con
con$getDataset("elisa_mbaa")
dt <- con$getDataset("elisa_mbaa")
con$quick_plot("hai")
con$quick_plot("elisa_mbaa")
con$quick_plot("elisa_mbaa", type = "boxplot")
dt <- dt[,analyte:=""]
dataset
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
type
type <- "heatmap"
dt_unique
library(reshape2)
dcast(dt_unique, subject_accession ~study_time_collected
)
head(dcast(dt_unique, subject_accession ~study_time_collected))
con$quick_plot("elisa_mbaa")
con$quick_plot("elisa_mbaa", reload = TRUE)
con$getDataset("elisa_mbaa", reload = T)
dt <- con$getDataset("elisa_mbaa", reload = T)
dt[, response := list(mean(log2(value_reported), na.rm = TRUE)),
by = "name,subject_accession,study_time_collected,analyte"]
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
head(dcast(dt_unique, subject_accession ~study_time_collected))
head(dcast(dt_unique, subject_accession ~ analyte))
head(dt_unique)
head(dcast(dt_unique, subject_accession ~ analyte, value.var = "response"))
head(dcast(dt_unique, subject_accession ~ analyte + study_time_collected, value.var = "response"))
head(dcast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response"))
dt_unique <- dt_unique[order(study_time_collected, subject_accession)]
head(dcast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response"))
class(head(dcast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response")))
matrix(head(dcast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response")))
matrix((head(dcast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response")))
as.matrix(dcast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response"))
dcast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response"))
dcast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response")
dt_unique
unique(dt_unique$analyte)
dat <- dcast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response")
#dcast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response")
dat
dt[, -c("analyte")]
acast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response")
class(acast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response"))
dt_unique
dt_unique[, list(subject_accession, age_reported, gender, race, name, study_time_collected)]
unique(dt_unique[, list(subject_accession, age_reported, gender, race, name, study_time_collected)])
anno <- unique(dt_unique[, list(subject_accession, age_reported, gender, race, name, study_time_collected)])
anno
anno <- data.frame(unique(dt_unique[, list(subject_accession, age_reported, gender, race, name, study_time_collected)]))
colnames(anno) <- paste(anno$subject_accession, anno$study_time_collected)
anno
df
paste(anno$subject_accession, anno$study_time_collected)
paste(anno$subject_accession, anno$study_time_collected, sep = "_")
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
dt_unique <- dt_unique[order(study_time_collected, subject_accession)]
mat <- acast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response")
anno <- data.frame(unique(dt_unique[, list(subject_accession, age_reported, gender, race, name, study_time_collected)]))
colnames(anno) <- paste(anno$subject_accession, anno$study_time_collected, sep = "_")
rownames(anno) <- paste(anno$subject_accession, anno$study_time_collected, sep = "_")
anno
mat
pheatmap(mat)
library(pheatmap)
pheatmap(mat)
p <- pheatmap(mat)
print(p)
plot(p)
p <- pheatmap(matrix, annotation = anno)
p <- pheatmap(mat, annotation = anno)
p
mat
anno
head(anno)
p <- pheatmap(mat, annotation = anno, show_colnames = FALSE,
show_rownames = show_rnames, cluster_cols = FALSE)
show_rnames <- FALSE
p <- pheatmap(mat, annotation = anno, show_colnames = FALSE,
show_rownames = show_rnames, cluster_cols = FALSE)
anno <- anno[, c("name", "study_time_collected")]
#show_rownames = show_rnames, cluster_cols = FALSE)
p <- pheatmap(mat, annotation = anno, show_colnames = FALSE,
show_rownames = show_rnames, cluster_cols = FALSE)
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
dt_unique <- dt_unique[order(name, study_time_collected, subject_accession)]
mat <- acast(dt_unique, analyte ~ subject_accession + study_time_collected, value.var = "response")
anno <- data.frame(unique(dt_unique[, list(subject_accession, age_reported, gender, race, name, study_time_collected)]))
rownames(anno) <- paste(anno$subject_accession, anno$study_time_collected, sep = "_")
anno <- anno[, c("name", "study_time_collected")]
p <- pheatmap(mat, annotation = anno, show_colnames = FALSE,
show_rownames = show_rnames, cluster_cols = FALSE)
anno
mat
colnames(mat)
colnames(mat) == rownames(anno)
colnames(mat) == rownames(anno)
anno
dim(anno)
dim(mat)
unique(colnames(mat))
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
dt_unique <- dt_unique[order(name, study_time_collected, subject_accession)]
mat <- acast(dt_unique, analyte ~ name + study_time_collected + subject_accession, value.var = "response")
dim(mat)
mat
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
dt_unique <- dt_unique[order(name, study_time_collected, subject_accession)]
mat <- acast(dt_unique, analyte ~ name + study_time_collected + subject_accession, value.var = "response")
anno <- data.frame(dt_unique[, list(subject_accession, age_reported, gender, race, name, study_time_collected)])
rownames(anno) <- paste(anno$name, anno$subject_accession, anno$study_time_collected, sep = "_")
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
dt_unique <- dt_unique[order(name, study_time_collected, subject_accession)]
mat <- acast(dt_unique, analyte ~ name + study_time_collected + subject_accession, value.var = "response")
anno <- data.frame(unique(dt_unique[, list(subject_accession, age_reported, gender, race, name, study_time_collected)]))
rownames(anno) <- paste(anno$name, anno$subject_accession, anno$study_time_collected, sep = "_")
anno <- anno[, c("study_time_collected", "name")]
p <- pheatmap(mat, annotation = anno, show_colnames = FALSE,
show_rownames = show_rnames, cluster_cols = FALSE)
anno
colnames(anno)
rownames(anno)
colnames(mat)
colnames(mat) == rownames(anno)
head(colnames(mat))
head(rownames(anno))
dt_unique <- unique(dt[, list(subject_accession, analyte,
age_reported, gender, race, name,
study_time_collected, response)])
dt_unique <- dt_unique[order(name, study_time_collected, subject_accession)]
mat <- acast(dt_unique, analyte ~ name + study_time_collected + subject_accession, value.var = "response")
anno <- data.frame(unique(dt_unique[, list(subject_accession, age_reported, gender, race, name, study_time_collected)]))
rownames(anno) <- paste(anno$name, anno$study_time_collected, anno$subject_accession, sep = "_")
anno <- anno[, c("study_time_collected", "name")]
p <- pheatmap(mat, annotation = anno, show_colnames = FALSE,
show_rownames = show_rnames, cluster_cols = FALSE)
anno$study_time_collected <- as.factor(study_time_collected)
anno$study_time_collected <- as.factor(anno$study_time_collected)
p <- pheatmap(mat, annotation = anno, show_colnames = FALSE,
show_rownames = show_rnames, cluster_cols = FALSE)
ls()
rm(list=ls())
labkey.url.base <- "posey.fhcrc.org"
library(ImmuneSpaceR)
con <- CreateConnection("SDY269")
con$quick_plot("hai")
library(ImmuneSpaceR)
con$quick_plot("hai")
con$quick_plot("hai")
con$quick_plot("elisa_mbaa")
